# Logfile created on 2023-06-22 22:18:40 +0300 by logger.rb/66358
I, [2023-06-22T22:18:40.419830 #95619]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe returns a response which has status code 400'
I, [2023-06-22T22:18:40.424002 #95619]  INFO -- : Sending GET request to path: "/api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:18:40.424027 #95619] DEBUG -- : body :
I, [2023-06-22T22:18:40.431617 #95619]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:18:40 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:18:40.431659 #95619] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T22:18:40.433095 #95619]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/05414583-f76a-430a-b337-396892c5baee returns a response which has status code 200'
I, [2023-06-22T22:18:40.437461 #95619]  INFO -- : Sending GET request to path: "/api/v1/products/05414583-f76a-430a-b337-396892c5baee" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T22:18:40.437483 #95619] DEBUG -- : body :
I, [2023-06-22T22:18:40.440008 #95619]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:18:40 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:18:40.440036 #95619] DEBUG -- : body: {"id":"d551f582-bb03-43dd-a714-f3f487af49ba","name":"Harold Kunde","code":"dolore","color":"White","created_at":"1938-12-22T12:04:56.292452515Z","updated_at":"1972-09-18T16:48:15.000472017Z","price":7085.82,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-22T22:20:02.637100 #95765]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe returns a response which has status code 400'
I, [2023-06-22T22:20:02.641192 #95765]  INFO -- : Sending GET request to path: "/api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:20:02.641235 #95765] DEBUG -- : body :
I, [2023-06-22T22:20:02.649095 #95765]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:20:02 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:20:02.649145 #95765] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T22:20:02.650669 #95765]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/05414583-f76a-430a-b337-396892c5baee returns a response which has status code 200'
I, [2023-06-22T22:20:02.655277 #95765]  INFO -- : Sending GET request to path: "/api/v1/products/05414583-f76a-430a-b337-396892c5baee" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T22:20:02.655319 #95765] DEBUG -- : body :
I, [2023-06-22T22:20:02.657752 #95765]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"270", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:20:02 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:20:02.657791 #95765] DEBUG -- : body: {"id":"b27f3502-78d5-4de3-9a0b-6cef924875a1","name":"Kamille Nicolas","code":"ullam","color":"Ivory","created_at":"1999-02-26T18:51:46.189182921Z","updated_at":"1907-07-03T02:41:34.714921909Z","price":9090.9,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-22T22:21:47.569027 #95899]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe returns a response which has status code 400'
I, [2023-06-22T22:21:47.573265 #95899]  INFO -- : Sending GET request to path: "/api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:21:47.573307 #95899] DEBUG -- : body :
I, [2023-06-22T22:21:47.580539 #95899]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:21:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:21:47.580584 #95899] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T22:21:47.581659 #95899]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/05414583-f76a-430a-b337-396892c5baee returns a response which has status code 200'
I, [2023-06-22T22:21:47.586022 #95899]  INFO -- : Sending GET request to path: "/api/v1/products/05414583-f76a-430a-b337-396892c5baee" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T22:21:47.586046 #95899] DEBUG -- : body :
I, [2023-06-22T22:21:47.588325 #95899]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"277", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:21:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:21:47.588347 #95899] DEBUG -- : body: {"id":"43fa4f51-9ca4-41fd-aea3-aa470b83d7e0","name":"Dion Gerhold","code":"consequatur","color":"CornflowerBlue","created_at":"1972-06-13T10:22:51.485727962Z","updated_at":"1935-12-13T22:52:03.043743014Z","price":7862.9,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-22T22:21:47.978136 #95899]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/fb627a46-be22-4707-b043-6888bb064eff returns a response which has status code 400'
I, [2023-06-22T22:21:47.981971 #95899]  INFO -- : Sending GET request to path: "/api/v1/products/fb627a46-be22-4707-b043-6888bb064eff" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:21:47.981996 #95899] DEBUG -- : body :
I, [2023-06-22T22:21:47.983981 #95899]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:21:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:21:47.984006 #95899] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T22:21:47.984410 #95899]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/b18460dc-51fd-447f-bd66-35973328d3f1 returns a response which has status code 200'
I, [2023-06-22T22:21:47.988040 #95899]  INFO -- : Sending GET request to path: "/api/v1/products/b18460dc-51fd-447f-bd66-35973328d3f1" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T22:21:47.988057 #95899] DEBUG -- : body :
I, [2023-06-22T22:21:47.989931 #95899]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"269", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:21:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:21:47.989963 #95899] DEBUG -- : body: {"id":"d8ca5da0-81b5-4451-9bf2-87cbd7c8b252","name":"Sid Kassulke","code":"ullam","color":"DarkMagenta","created_at":"1966-04-29T03:02:43.824697858Z","updated_at":"1992-12-01T11:34:05.825687813Z","price":9471.24,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-22T22:21:47.990480 #95899]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get body parser error when no product id is given A request for get products with POST /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-22T22:21:47.994527 #95899]  INFO -- : Sending POST request to path: "/api/v1/products/bulk" with headers: {"HTTP_ACCEPT"=>"application/json", "CONTENT_TYPE"=>"application/json", "HTTP_X_PACT_ORIGINAL_HEADER_NAMES"=>"Accept,Content-Type", "X_PACT_PROVIDER_STATES"=>[{"name"=>"i get body parser error when no product id is given"}]}, see debug logs for body
D, [2023-06-22T22:21:47.994553 #95899] DEBUG -- : body :
I, [2023-06-22T22:21:47.996179 #95899]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:21:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:21:47.996198 #95899] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-22T22:21:47.996605 #95899]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with POST /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-22T22:21:48.000384 #95899]  INFO -- : Sending POST request to path: "/api/v1/products/bulk" with headers: {"HTTP_ACCEPT"=>"application/json", "CONTENT_TYPE"=>"application/json", "HTTP_X_PACT_ORIGINAL_HEADER_NAMES"=>"Accept,Content-Type", "X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:21:48.000408 #95899] DEBUG -- : body :{"ids":["67990b9f-2c9d-45e2-9ab3-aa78cde5a542"]}
I, [2023-06-22T22:21:48.001872 #95899]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"76", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:21:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:21:48.001903 #95899] DEBUG -- : body: {"code":20003,"message":"At least one of given product ids does not exist."}
I, [2023-06-22T22:22:23.998380 #95976]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe returns a response which has status code 400'
I, [2023-06-22T22:22:24.002784 #95976]  INFO -- : Sending GET request to path: "/api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:22:24.002819 #95976] DEBUG -- : body :
I, [2023-06-22T22:22:24.010141 #95976]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:22:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:22:24.010180 #95976] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T22:22:24.011230 #95976]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/05414583-f76a-430a-b337-396892c5baee returns a response which has status code 200'
I, [2023-06-22T22:22:24.016815 #95976]  INFO -- : Sending GET request to path: "/api/v1/products/05414583-f76a-430a-b337-396892c5baee" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T22:22:24.016834 #95976] DEBUG -- : body :
I, [2023-06-22T22:22:24.019232 #95976]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:22:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:22:24.019253 #95976] DEBUG -- : body: {"id":"bbe49e57-d474-4ab5-8672-78578d6f479f","name":"Gina Hand","code":"molestias","color":"LemonChiffon","created_at":"2011-10-20T20:44:36.756857085Z","updated_at":"1999-09-05T01:53:31.442550181Z","price":5465.39,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-22T22:22:24.411960 #95976]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/fb627a46-be22-4707-b043-6888bb064eff returns a response which has status code 400'
I, [2023-06-22T22:22:24.415804 #95976]  INFO -- : Sending GET request to path: "/api/v1/products/fb627a46-be22-4707-b043-6888bb064eff" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:22:24.415826 #95976] DEBUG -- : body :
I, [2023-06-22T22:22:24.417252 #95976]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:22:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:22:24.417271 #95976] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T22:22:24.417649 #95976]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/b18460dc-51fd-447f-bd66-35973328d3f1 returns a response which has status code 200'
I, [2023-06-22T22:22:24.420951 #95976]  INFO -- : Sending GET request to path: "/api/v1/products/b18460dc-51fd-447f-bd66-35973328d3f1" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T22:22:24.420972 #95976] DEBUG -- : body :
I, [2023-06-22T22:22:24.422234 #95976]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"268", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:22:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:22:24.422250 #95976] DEBUG -- : body: {"id":"62a7d32c-f1c1-4f93-ba91-c4341f67f7ee","name":"Geoffrey White","code":"est","color":"NavajoWhite","created_at":"1945-02-02T13:02:24.16087643Z","updated_at":"1912-06-24T06:38:54.906907142Z","price":8350.08,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-22T22:22:24.422600 #95976]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get body parser error when no product id is given A request for get products with POST /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-22T22:22:24.431298 #95976]  INFO -- : Sending POST request to path: "/api/v1/products/bulk" with headers: {"HTTP_ACCEPT"=>"application/json", "CONTENT_TYPE"=>"application/json", "HTTP_X_PACT_ORIGINAL_HEADER_NAMES"=>"Accept,Content-Type", "X_PACT_PROVIDER_STATES"=>[{"name"=>"i get body parser error when no product id is given"}]}, see debug logs for body
D, [2023-06-22T22:22:24.431331 #95976] DEBUG -- : body :
I, [2023-06-22T22:22:24.433338 #95976]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:22:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:22:24.433354 #95976] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-22T22:22:24.433729 #95976]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with POST /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-22T22:22:24.437828 #95976]  INFO -- : Sending POST request to path: "/api/v1/products/bulk" with headers: {"HTTP_ACCEPT"=>"application/json", "CONTENT_TYPE"=>"application/json", "HTTP_X_PACT_ORIGINAL_HEADER_NAMES"=>"Accept,Content-Type", "X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T22:22:24.437849 #95976] DEBUG -- : body :{"ids":["67990b9f-2c9d-45e2-9ab3-aa78cde5a542"]}
I, [2023-06-22T22:22:24.439763 #95976]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"76", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 19:22:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T22:22:24.439807 #95976] DEBUG -- : body: {"code":20003,"message":"At least one of given product ids does not exist."}
I, [2023-06-22T23:21:03.752539 #99735]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe returns a response which has status code 400'
I, [2023-06-22T23:21:03.757248 #99735]  INFO -- : Sending GET request to path: "/api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T23:21:03.757288 #99735] DEBUG -- : body :
I, [2023-06-22T23:21:03.766331 #99735]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:03.766379 #99735] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T23:21:03.767555 #99735]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/05414583-f76a-430a-b337-396892c5baee returns a response which has status code 200'
I, [2023-06-22T23:21:03.772278 #99735]  INFO -- : Sending GET request to path: "/api/v1/products/05414583-f76a-430a-b337-396892c5baee" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T23:21:03.772309 #99735] DEBUG -- : body :
I, [2023-06-22T23:21:03.774238 #99735]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:03.774278 #99735] DEBUG -- : body: {"id":"8aabee41-a6c5-4a96-97a4-4050792eb047","name":"Maritza Torphy","code":"odio","color":"DodgerBlue","created_at":"1907-06-12T19:52:05.372868023Z","updated_at":"1987-12-13T22:52:47.199021701Z","price":8748.81,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-22T23:21:04.178713 #99735]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe returns a response which has status code 400'
I, [2023-06-22T23:21:04.182573 #99735]  INFO -- : Sending GET request to path: "/api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T23:21:04.182593 #99735] DEBUG -- : body :
I, [2023-06-22T23:21:04.184097 #99735]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:04.184114 #99735] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T23:21:04.184513 #99735]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/05414583-f76a-430a-b337-396892c5baee returns a response which has status code 200'
I, [2023-06-22T23:21:04.187833 #99735]  INFO -- : Sending GET request to path: "/api/v1/products/05414583-f76a-430a-b337-396892c5baee" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T23:21:04.187854 #99735] DEBUG -- : body :
I, [2023-06-22T23:21:04.189118 #99735]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"269", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:04.189134 #99735] DEBUG -- : body: {"id":"98ee7be9-5e90-4490-b53e-1ca2698fdc4b","name":"Tomas Crona","code":"alias","color":"LightSkyBlue","created_at":"2013-09-17T17:08:26.256937323Z","updated_at":"2004-02-19T07:01:49.515671773Z","price":4516.96,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-22T23:21:41.373610 #99812]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe returns a response which has status code 400'
I, [2023-06-22T23:21:41.377868 #99812]  INFO -- : Sending GET request to path: "/api/v1/products/95ad6d40-b7ab-4753-860c-8ce1a66b45fe" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T23:21:41.377894 #99812] DEBUG -- : body :
I, [2023-06-22T23:21:41.386208 #99812]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:41 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:41.386246 #99812] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T23:21:41.387303 #99812]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/05414583-f76a-430a-b337-396892c5baee returns a response which has status code 200'
I, [2023-06-22T23:21:41.392071 #99812]  INFO -- : Sending GET request to path: "/api/v1/products/05414583-f76a-430a-b337-396892c5baee" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T23:21:41.392091 #99812] DEBUG -- : body :
I, [2023-06-22T23:21:41.394103 #99812]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:41 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:41.394120 #99812] DEBUG -- : body: {"id":"ce72fd2d-6004-4e54-b74a-291abc34a8fb","name":"Ezra Legros","code":"eaque","color":"Red","created_at":"1907-09-07T01:11:38.18483918Z","updated_at":"1923-05-08T05:13:04.388485217Z","price":8832.07,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-22T23:21:41.789034 #99812]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/fb627a46-be22-4707-b043-6888bb064eff returns a response which has status code 400'
I, [2023-06-22T23:21:41.792626 #99812]  INFO -- : Sending GET request to path: "/api/v1/products/fb627a46-be22-4707-b043-6888bb064eff" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T23:21:41.792648 #99812] DEBUG -- : body :
I, [2023-06-22T23:21:41.794064 #99812]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:41 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:41.794082 #99812] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-22T23:21:41.794452 #99812]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/b18460dc-51fd-447f-bd66-35973328d3f1 returns a response which has status code 200'
I, [2023-06-22T23:21:41.797882 #99812]  INFO -- : Sending GET request to path: "/api/v1/products/b18460dc-51fd-447f-bd66-35973328d3f1" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-22T23:21:41.797900 #99812] DEBUG -- : body :
I, [2023-06-22T23:21:41.799204 #99812]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"273", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:41 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:41.799220 #99812] DEBUG -- : body: {"id":"9ce0d4aa-536e-4b3b-9302-aca67a4a207e","name":"Velva Leannon","code":"dolor","color":"DarkOliveGreen","created_at":"1963-10-29T04:55:07.940456882Z","updated_at":"2018-12-22T02:31:03.543685292Z","price":6713.54,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-22T23:21:41.799588 #99812]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get body parser error when no product id is given A request for get products with POST /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-22T23:21:41.805023 #99812]  INFO -- : Sending POST request to path: "/api/v1/products/bulk" with headers: {"HTTP_ACCEPT"=>"application/json", "CONTENT_TYPE"=>"application/json", "HTTP_X_PACT_ORIGINAL_HEADER_NAMES"=>"Accept,Content-Type", "X_PACT_PROVIDER_STATES"=>[{"name"=>"i get body parser error when no product id is given"}]}, see debug logs for body
D, [2023-06-22T23:21:41.805058 #99812] DEBUG -- : body :
I, [2023-06-22T23:21:41.807542 #99812]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:41 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:41.807578 #99812] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-22T23:21:41.807964 #99812]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with POST /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-22T23:21:41.811829 #99812]  INFO -- : Sending POST request to path: "/api/v1/products/bulk" with headers: {"HTTP_ACCEPT"=>"application/json", "CONTENT_TYPE"=>"application/json", "HTTP_X_PACT_ORIGINAL_HEADER_NAMES"=>"Accept,Content-Type", "X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-22T23:21:41.811854 #99812] DEBUG -- : body :{"ids":["67990b9f-2c9d-45e2-9ab3-aa78cde5a542"]}
I, [2023-06-22T23:21:41.813161 #99812]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"76", "Content-Type"=>"application/json", "Date"=>"Thu, 22 Jun 2023 20:21:41 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-22T23:21:41.813182 #99812] DEBUG -- : body: {"code":20003,"message":"At least one of given product ids does not exist."}
